version: '3.8'

services:
  # Main application container
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    container_name: ultimatepos_app
    restart: unless-stopped
    depends_on:
      - mysql
      - redis
    volumes:
      - ./:/var/www/html
      - ./storage/app:/var/www/html/storage/app
      - ./storage/logs:/var/www/html/storage/logs
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_HOST=mysql
      - DB_DATABASE=ultimatepos
      - DB_USERNAME=ultimatepos
      - DB_PASSWORD=ultimatepos_password
      - REDIS_HOST=redis
      - CACHE_DRIVE=file
      - SESSION_DRIVE=file
      - QUEUE_CONNECTION=sync
    ports:
      - "8080:80"
    networks:
      - ultimatepos-network

  # MySQL database
  mysql:
    image: mysql:8.0
    container_name: ultimatepos_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ultimatepos
      MYSQL_USER: ultimatepos
      MYSQL_PASSWORD: ultimatepos_password
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - ultimatepos-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: ultimatepos_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ultimatepos_redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - ultimatepos-network

  # phpMyAdmin for database management
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: ultimatepos_phpmyadmin
    restart: unless-stopped
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_USER: ultimatepos
      PMA_PASSWORD: ultimatepos_password
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "8081:80"
    networks:
      - ultimatepos-network

  # MailHog for email testing (development only)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: ultimatepos_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - ultimatepos-network

  # Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: ultimatepos_redis_commander
    restart: unless-stopped
    depends_on:
      - redis
    environment:
      REDIS_HOSTS: local:redis:6379:0:ultimatepos_redis_password
    ports:
      - "8082:8081"
    networks:
      - ultimatepos-network

# Production override
x-production: &production
  app:
    build:
      target: production
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
    volumes:
      - ./storage/app:/var/www/html/storage/app
      - ./storage/logs:/var/www/html/storage/logs

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  ultimatepos-network:
    driver: bridge